[{"/e/Projects/Sigo/Frontend/src/index.js":"1","/e/Projects/Sigo/Frontend/src/App.js":"2","/e/Projects/Sigo/Frontend/src/models/LoginModel.js":"3","/e/Projects/Sigo/Frontend/src/contexts/LoaderContext.js":"4","/e/Projects/Sigo/Frontend/src/contexts/LoginContext.js":"5","/e/Projects/Sigo/Frontend/src/components/Register/index.jsx":"6","/e/Projects/Sigo/Frontend/src/components/ProtectedRoute/index.jsx":"7","/e/Projects/Sigo/Frontend/src/components/Login/index.jsx":"8","/e/Projects/Sigo/Frontend/src/components/Dashboard/index.jsx":"9","/e/Projects/Sigo/Frontend/src/auth.js":"10","/e/Projects/Sigo/Frontend/src/components/GlobalStyle.js":"11","/e/Projects/Sigo/Frontend/src/hooks/useErrors.js":"12","/e/Projects/Sigo/Frontend/src/UI/colors.js":"13","/e/Projects/Sigo/Frontend/src/components/Menu/index.jsx":"14","/e/Projects/Sigo/Frontend/src/components/Menu/assets/styles.js":"15","/e/Projects/Sigo/Frontend/src/components/Menu/Toolbar/index.jsx":"16","/e/Projects/Sigo/Frontend/src/components/Menu/Toolbar/assets/styles.js":"17","/e/Projects/Sigo/Frontend/src/components/Menu/assets/images.js":"18","/e/Projects/Sigo/Frontend/src/services/ModulesService.js":"19","/e/Projects/Sigo/Frontend/src/components/Dashboard/assets/style.js":"20","/e/Projects/Sigo/Frontend/src/components/Dashboard/Vendas.js":"21","/e/Projects/Sigo/Frontend/src/components/Compliance/index.jsx":"22","/e/Projects/Sigo/Frontend/src/components/Compliance/Menu.js":"23","/e/Projects/Sigo/Frontend/src/components/Main/index.jsx":"24","/e/Projects/Sigo/Frontend/src/components/Toolbar/index.jsx":"25","/e/Projects/Sigo/Frontend/src/components/Sidebar/index.jsx":"26","/e/Projects/Sigo/Frontend/src/components/Sidebar/assets/style.js":"27","/e/Projects/Sigo/Frontend/src/components/Toolbar/assets/style.js":"28","/e/Projects/Sigo/Frontend/src/services/OrdersService.js":"29","/e/Projects/Sigo/Frontend/src/components/CardListing/index.jsx":"30","/e/Projects/Sigo/Frontend/src/components/Dashboard/orders.js":"31","/e/Projects/Sigo/Frontend/src/components/Dashboard/process.js":"32","/e/Projects/Sigo/Frontend/src/services/ProcessService.js":"33","/e/Projects/Sigo/Frontend/src/components/Compliance/assets/style.js":"34","/e/Projects/Sigo/Frontend/src/components/Modal/index.jsx":"35","/e/Projects/Sigo/Frontend/src/components/CompliancesForm/index.jsx":"36","/e/Projects/Sigo/Frontend/src/components/StandardsForm/index.jsx":"37","/e/Projects/Sigo/Frontend/src/components/StandardsForm/assets/styles.js":"38","/e/Projects/Sigo/Frontend/src/components/StandardsForm/standards.js":"39","/e/Projects/Sigo/Frontend/src/services/CompliancesService.js":"40","/e/Projects/Sigo/Frontend/src/components/CardListingScrow/index.jsx":"41"},{"size":265,"mtime":1610916611605,"results":"42","hashOfConfig":"43"},{"size":1658,"mtime":1612651850097,"results":"44","hashOfConfig":"43"},{"size":442,"mtime":1608606150348,"results":"45","hashOfConfig":"43"},{"size":104,"mtime":1610022426176,"results":"46","hashOfConfig":"43"},{"size":102,"mtime":1608606316621,"results":"47","hashOfConfig":"43"},{"size":129,"mtime":1608479104623,"results":"48","hashOfConfig":"43"},{"size":812,"mtime":1612707111856,"results":"49","hashOfConfig":"43"},{"size":2994,"mtime":1612709868024,"results":"50","hashOfConfig":"43"},{"size":3986,"mtime":1612647226350,"results":"51","hashOfConfig":"43"},{"size":889,"mtime":1612660024210,"results":"52","hashOfConfig":"43"},{"size":398,"mtime":1610202316565,"results":"53","hashOfConfig":"43"},{"size":768,"mtime":1608601784794,"results":"54","hashOfConfig":"43"},{"size":77,"mtime":1610202314241,"results":"55","hashOfConfig":"43"},{"size":2384,"mtime":1612707257902,"results":"56","hashOfConfig":"43"},{"size":404,"mtime":1610967964697,"results":"57","hashOfConfig":"43"},{"size":1297,"mtime":1612652691885,"results":"58","hashOfConfig":"43"},{"size":1170,"mtime":1612219896505,"results":"59","hashOfConfig":"43"},{"size":218,"mtime":1610938236860,"results":"60","hashOfConfig":"43"},{"size":486,"mtime":1612639392584,"results":"61","hashOfConfig":"43"},{"size":410,"mtime":1611155937551,"results":"62","hashOfConfig":"43"},{"size":3375,"mtime":1611807044890,"results":"63","hashOfConfig":"43"},{"size":12773,"mtime":1612622251452,"results":"64","hashOfConfig":"43"},{"size":464,"mtime":1612369466745,"results":"65","hashOfConfig":"43"},{"size":1064,"mtime":1612218795932,"results":"66","hashOfConfig":"43"},{"size":1290,"mtime":1612218765211,"results":"67","hashOfConfig":"43"},{"size":2405,"mtime":1612655708553,"results":"68","hashOfConfig":"43"},{"size":1764,"mtime":1612224660785,"results":"69","hashOfConfig":"43"},{"size":1764,"mtime":1612219129282,"results":"70","hashOfConfig":"43"},{"size":492,"mtime":1612639395668,"results":"71","hashOfConfig":"43"},{"size":3428,"mtime":1612376050700,"results":"72","hashOfConfig":"43"},{"size":425,"mtime":1612232566625,"results":"73","hashOfConfig":"43"},{"size":388,"mtime":1612232561082,"results":"74","hashOfConfig":"43"},{"size":484,"mtime":1612642911580,"results":"75","hashOfConfig":"43"},{"size":814,"mtime":1612549031966,"results":"76","hashOfConfig":"43"},{"size":1095,"mtime":1612483299536,"results":"77","hashOfConfig":"43"},{"size":1775,"mtime":1612483314505,"results":"78","hashOfConfig":"43"},{"size":2656,"mtime":1612711175150,"results":"79","hashOfConfig":"43"},{"size":589,"mtime":1612375161267,"results":"80","hashOfConfig":"43"},{"size":397,"mtime":1612232842465,"results":"81","hashOfConfig":"43"},{"size":1801,"mtime":1612639389688,"results":"82","hashOfConfig":"43"},{"size":2732,"mtime":1612496755087,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"t6dd8d",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},"/e/Projects/Sigo/Frontend/src/index.js",[],["171","172"],"/e/Projects/Sigo/Frontend/src/App.js",[],"/e/Projects/Sigo/Frontend/src/models/LoginModel.js",[],"/e/Projects/Sigo/Frontend/src/contexts/LoaderContext.js",[],"/e/Projects/Sigo/Frontend/src/contexts/LoginContext.js",[],"/e/Projects/Sigo/Frontend/src/components/Register/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/ProtectedRoute/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Login/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Dashboard/index.jsx",["173"],"import React, { useEffect, useState, useContext } from \"react\"\nimport {\n  Grid,\n  Card,\n  Avatar,\n  Snackbar,\n  Container,\n  IconButton,\n  CardHeader,\n  CardActionArea\n} from \"@material-ui/core\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport { useStyles } from \"./assets/style\"\nimport People from \"@material-ui/icons/People\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nimport Vendas from \"./Vendas\"\n\nimport CardListing from \"~/components/CardListing\"\nimport LoaderContext from \"~/contexts/LoaderContext\"\nimport OrdersService from \"~/services/OrdersService\"\nimport ProcessService from \"~/services/ProcessService\"\nimport { ordersColumns, getOrdersRows } from \"~/components/Dashboard/orders\"\nimport { processColumns, getProcessRows } from \"~/components/Dashboard/process\"\n\nconst modulesList = [1, 2, 3]\nconst client = new WebSocket(process.env.REACT_APP_MSGPI_WEBSOCKET)\n\nconst Dashboard = () => {\n  const classes = useStyles()\n  const [message, setMessage] = useState(false)\n  const [process, setProcess] = useState(\"\")\n  const loader = useContext(LoaderContext)\n  const [ordersRows, setOrdersRows] = useState([])\n  const [processRows, setProcessRows] = useState([])\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const handleClose = () => {\n    setMessage(false)\n  }\n\n  useEffect(() => {\n    loader(true)\n\n    ProcessService.get()\n      .then((response) => {\n        loader(false)\n        setProcessRows(getProcessRows(response[0]))\n\n        localStorage.setItem('process', JSON.stringify(getProcessRows(response[0])))\n      })\n      .catch((error) => {\n        loader(false)\n        console.log(error)\n      })\n\n    OrdersService.get()\n      .then((response) => {\n        loader(false)\n        setOrdersRows(getOrdersRows(response[0]))\n      })\n      .catch((error) => {\n        loader(false)\n        console.log(error)\n      })\n\n    client.onopen = () => { console.log('WebSocket Client Connected') }\n    client.onmessage = (message) => {\n      let updateProcessRows = JSON.parse(localStorage.getItem('process'))\n\n      const item = updateProcessRows.find(element => (element.numero === message.data))\n      const index = updateProcessRows.indexOf(item, 0)\n\n      updateProcessRows[index].status = \"stopped\"\n\n      setMessage(true)\n      setProcess(message.data)\n      setProcessRows(updateProcessRows)\n\n      client.close()\n      client.onopen()\n    }\n  }, [])\n\n  return (\n    <Grid container>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={message}\n        key=\"topright\"\n        action={\n          <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <Alert onClose={handleClose} severity=\"error\">\n          Ocorreu uma parada no processo {process}!\n        </Alert>\n      </Snackbar>\n\n      {modulesList.map((module, index) => (\n        <Grid key={index} item md={6} xl={4} xs={12}>\n          <Container className={classes.cardGrid} >\n            <CardActionArea>\n              <Card>\n                <CardHeader\n                  title=\"Usuários\"\n                  subheader=\"Alguma descrição\"\n                  avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                      <People />\n                    </Avatar>\n                  }\n                />\n              </Card>\n            </CardActionArea>\n          </Container>\n        </Grid>\n      ))}\n\n      <Grid item md={12} xs={12}>\n        <CardListing title=\"Processos\" rows={processRows} columns={processColumns} />\n      </Grid>\n\n      <Grid item md={12} xs={12}>\n        <CardListing title=\"Pedidos\" rows={ordersRows} columns={ordersColumns} />\n      </Grid>\n\n      <Grid item md={12} xs={12}>\n        <Vendas />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;","/e/Projects/Sigo/Frontend/src/auth.js",[],"/e/Projects/Sigo/Frontend/src/components/GlobalStyle.js",[],"/e/Projects/Sigo/Frontend/src/hooks/useErrors.js",[],"/e/Projects/Sigo/Frontend/src/UI/colors.js",[],"/e/Projects/Sigo/Frontend/src/components/Menu/index.jsx",["174","175"],"/e/Projects/Sigo/Frontend/src/components/Menu/assets/styles.js",[],"/e/Projects/Sigo/Frontend/src/components/Menu/Toolbar/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Menu/Toolbar/assets/styles.js",[],"/e/Projects/Sigo/Frontend/src/components/Menu/assets/images.js",[],"/e/Projects/Sigo/Frontend/src/services/ModulesService.js",[],"/e/Projects/Sigo/Frontend/src/components/Dashboard/assets/style.js",[],"/e/Projects/Sigo/Frontend/src/components/Dashboard/Vendas.js",[],"/e/Projects/Sigo/Frontend/src/components/Compliance/index.jsx",["176","177"],"import React, { useState, useEffect, useContext } from 'react'\nimport {\n  Fab,\n  Grid,\n  Chip,\n  Card,\n  Paper,\n  Button,\n  Tooltip,\n  Accordion,\n  CardHeader,\n  CardContent,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel\n} from '@material-ui/core'\n\nimport { useStyles } from \"./assets/style\"\nimport AddIcon from '@material-ui/icons/Add'\nimport SaveIcon from '@material-ui/icons/Save'\nimport BuildIcon from '@material-ui/icons/Build'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport LoaderContext from \"~/contexts/LoaderContext\"\n\nimport CustomModal from \"~/components/Modal\"\nimport StandardsForm from \"~/components/StandardsForm\"\nimport CompliancesForm from \"~/components/CompliancesForm\"\nimport CompliancesService from \"~/services/CompliancesService\"\n\nexport default function Compliance() {\n  const classes = useStyles()\n  const loader = useContext(LoaderContext)\n  const [expanded, setExpanded] = useState(false)\n  const [compliancesList, setCompliancesList] = useState([])\n  const [newComplianceList, setNewComplianceList] = useState([])\n  const [updateCompliances, setUpdateCompliances] = useState([])\n  const [deleteCompliances, setDeleteCompliances] = useState([])\n\n  const [open, setOpen] = useState(false)\n  const [openStandard, setOpenStandard] = useState(false)\n  const handleModalOpen = () => { setOpen(true) }\n  const handleModalClose = () => { setOpen(false) }\n  const handleModalOpenStandard = () => { setOpenStandard(true) }\n  const handleModalCloseStandard = () => { setOpenStandard(false) }\n  const forceUpdate = useForceUpdate()\n  const [value, setValue] = useState(0)\n  function useForceUpdate() {\n    return () => setValue(value => value + 1)\n  }\n\n  const handleDeleteComplianceClick = (event, index) => {\n    event.stopPropagation()\n\n    if (!newComplianceList[index] && compliancesList[index]) {\n      deleteCompliances.push({\n        compliance: {\n          data: {\n            id: compliancesList[index].compliance_id\n          }\n        }\n      })\n\n      delete compliancesList[index]\n\n      setDeleteCompliances(deleteCompliances)\n    }\n\n    if (newComplianceList[index]) {\n      delete newComplianceList[index]\n      delete compliancesList[index]\n    }\n\n    forceUpdate()\n  }\n\n  const handleStatusStandardClick = (event, index, index2) => {\n    compliancesList[index].standardsList[index2].status =\n        !compliancesList[index].standardsList[index2].status\n    if (!newComplianceList[index]) {\n      let item = updateCompliances.find(element =>\n        element.id === compliancesList[index].compliance_id &&\n        element.data.standard_id === compliancesList[index].standardsList[index2].standard_id\n      )\n\n      if (!item) {\n        updateCompliances.push({\n          id: compliancesList[index].compliance_id,\n          name: compliancesList[index].name,\n          desc: compliancesList[index].description,\n          data: {\n            id: compliancesList[index].standardsList[index2].standard_id,\n            code: compliancesList[index].standardsList[index2].code,\n            name: compliancesList[index].standardsList[index2].name,\n            desc: compliancesList[index].standardsList[index2].description,\n            status: compliancesList[index].standardsList[index2].status\n          }\n        })\n      }\n\n      if (item) updateCompliances.splice(updateCompliances.indexOf(item), 1)\n\n      setUpdateCompliances(updateCompliances)\n    }\n\n    forceUpdate()\n  }\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  const complianceUtils = {\n    closeModal: handleModalClose,\n    setCompliance: (compliance) => {\n      const newCompliance = {\n        name: compliance.name,\n        description: compliance.desc,\n        standardsList: []\n      }\n  \n      compliancesList.push(newCompliance)\n      newComplianceList[compliancesList.length - 1] = newCompliance\n  \n      handleModalClose()\n      setCompliancesList(compliancesList)\n      setNewComplianceList(newComplianceList)\n    }\n  }\n\n  const standardUtils = {\n    closeModal: handleModalCloseStandard,\n    setStandard: (identifier, standards) => {\n      console.log(identifier, standards)\n\n      standards.forEach(element => {\n        newComplianceList[identifier].standardsList.push({\n          code: element.code,\n          compliance: identifier,\n          description: element.desc,\n          name: element.name,\n          standard_id: 0,\n          status: true\n        })\n      })\n\n      setNewComplianceList(newComplianceList)\n      handleModalCloseStandard()\n    }\n  }\n\n  const complianceCreateListFiltered = () => {\n    let complianceListFiltered = []\n    newComplianceList.forEach(element => {\n      if (element) {\n        let list = []\n        element.standardsList.forEach(data => {\n          list.push({\n            code: data.code,\n            name: data.name,\n            desc: data.description,\n            status: data.status\n          })\n        })\n\n        complianceListFiltered.push({\n          data: {\n            name: element.name,\n            desc: element.description\n          },\n          standardsList: list\n        })\n      }\n    })\n\n    return {compliances: complianceListFiltered}\n  }\n\n  const complianceUpdateListFiltered = () => {\n    let updateCompliancesFiltered = []\n    updateCompliances.forEach(element => {\n      updateCompliancesFiltered.push({\n        compliance: {\n          data: {\n              id: element.id,\n              name: element.name,\n              desc: element.desc\n          },\n          standardsList: [element.data]\n        }\n      })\n    })\n    return updateCompliancesFiltered\n  }\n\n  const saveCompliances = () => {\n    loader(true)\n\n    const createList = complianceCreateListFiltered()\n    const updateList = complianceUpdateListFiltered()\n\n    if (createList.compliances.length) {\n      CompliancesService.post(createList)\n        .then((response) => {\n          loader(false)\n          setNewComplianceList([])\n          console.log(response)\n        })\n        .catch((error) => {\n          loader(false)\n          console.log(error)\n        })\n    }\n\n    if (updateList.length) {\n      updateList.forEach(data => {\n        CompliancesService.put(data)\n          .then((response) => {\n            loader(false)\n            setUpdateCompliances([])\n            console.log(response)\n          })\n          .catch((error) => {\n            loader(false)\n            console.log(error)\n          })\n      })\n    }\n\n    if (deleteCompliances.length) {\n      deleteCompliances.forEach(data => {\n        CompliancesService.delete(data)\n          .then((response) => {\n            loader(false)\n            setDeleteCompliances([])\n            console.log(response)\n          })\n          .catch((error) => {\n            loader(false)\n            console.log(error)\n          })\n      })\n    }\n  }\n\n  useEffect(() => {\n    loader(true)\n    CompliancesService.get()\n      .then((response) => {\n        loader(false)\n        setCompliancesList(response)\n      })\n      .catch((error) => {\n        loader(false)\n        console.log(error)\n      })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Card>\n        <Paper className={classes.paperSecondary}>\n          <Grid container wrap=\"nowrap\" spacing={2}>\n            <Grid item xs zeroMinWidth>\n            <CardHeader\n              avatar={<BuildIcon color=\"primary\" />}\n              \n              title=\"Gerenciar compliances\"\n            />\n            </Grid>\n          </Grid>\n        </Paper>\n        <CardContent>\n          {compliancesList.length === 0 && (\n            <Grid\n              container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ minHeight: '20vh' }}\n            >\n              <Button\n                type=\"button\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleModalOpen}\n              >\n                Cadastrar primeiro compliance\n              </Button>\n\n              <CustomModal\n                open={open}\n                component={CompliancesForm}\n                handleModalClose={handleModalClose}\n                method={complianceUtils}\n              />\n            </Grid>\n          )}\n          {compliancesList.map((compliance, index) => (\n            <Accordion key={index}\n              expanded={expanded === index}\n              onChange={handleChange(index)}\n              className={classes.accordionGlobal}\n            >\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <div className={classes.heading}>\n                  {compliance.description}\n                </div>\n\n                <CardContent>\n                  <Button\n                    color=\"primary\"\n                    onClick={(event) => handleDeleteComplianceClick(event, index)}\n                    className={classes.buttonRight}\n                    variant=\"contained\"\n                    size=\"small\"\n                  >\n                    Exlcuir\n                  </Button>\n                </CardContent>\n              </AccordionSummary>\n\n              <AccordionDetails className={classes.accordionBody}>\n                <div className={classes.rootSecondary}>\n                  {compliance.standardsList.length === 0 && (\n                    <Grid\n                      container\n                      spacing={0}\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"center\"\n                      style={{ minHeight: '20vh' }}\n                    >\n                      <Button\n                        type=\"button\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleModalOpenStandard}\n                      >\n                        Cadastrar primeira norma\n                      </Button>\n\n                      <CustomModal\n                        open={openStandard}\n                        component={StandardsForm}\n                        handleModalClose={handleModalCloseStandard}\n                        identifier={index}\n                        method={standardUtils}\n                      />\n                    </Grid>\n                  )}\n                  {compliance.standardsList.map((standard, index2) => (\n                    <Paper key={index2} className={classes.paper}>\n                      <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item xs zeroMinWidth>\n                        <CardHeader\n                          avatar={\n                            <Chip\n                              color={(standard.status === true) ? \"primary\" : \"secondary\" }\n                              label={standard.code}\n                              size=\"small\"\n                            />\n                          }\n                          action={\n                            <FormControlLabel\n                              aria-label=\"Acknowledge\"\n                              control={<></>}\n                            />\n                          }\n                          title={standard.name}\n                          subheader={standard.description}\n                        />\n                        </Grid>\n                      </Grid>\n                      <CardContent>\n                        <Button\n                          color={(standard.status === true) ? \"primary\" : \"secondary\" }\n                          onClick={(event) => handleStatusStandardClick(event, index, index2)}\n                          className={classes.buttonRight}\n                          variant=\"contained\"\n                          size=\"small\"\n                        >\n                          {(standard.status) ? \"Desativar\" : \"Ativar\" }\n                        </Button>\n                      </CardContent>\n                    </Paper>\n                  ))}\n                </div>\n              </AccordionDetails>\n            </Accordion>\n          ))}\n\n          <Tooltip\n            title=\"Salvar alterações\"\n            onClick={saveCompliances}\n          >\n            <Fab color=\"primary\" className={classes.button}>\n              <SaveIcon />\n            </Fab>\n          </Tooltip>\n\n          <Tooltip\n            title=\"Adicionar compliance\"\n            onClick={handleModalOpen}\n          >\n            <Fab color=\"primary\" className={classes.button}>\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n\n          <CustomModal\n            open={open}\n            component={CompliancesForm}\n            handleModalClose={handleModalClose}\n            method={complianceUtils}\n          />\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","/e/Projects/Sigo/Frontend/src/components/Compliance/Menu.js",[],["178","179"],"/e/Projects/Sigo/Frontend/src/components/Main/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Toolbar/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Sidebar/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Sidebar/assets/style.js",[],"/e/Projects/Sigo/Frontend/src/components/Toolbar/assets/style.js",[],"/e/Projects/Sigo/Frontend/src/services/OrdersService.js",[],"/e/Projects/Sigo/Frontend/src/components/CardListing/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/Dashboard/orders.js",[],"/e/Projects/Sigo/Frontend/src/components/Dashboard/process.js",[],"/e/Projects/Sigo/Frontend/src/services/ProcessService.js",[],"/e/Projects/Sigo/Frontend/src/components/Compliance/assets/style.js",[],"/e/Projects/Sigo/Frontend/src/components/Modal/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/CompliancesForm/index.jsx",[],"/e/Projects/Sigo/Frontend/src/components/StandardsForm/index.jsx",["180","181"],"/e/Projects/Sigo/Frontend/src/components/StandardsForm/assets/styles.js",[],"/e/Projects/Sigo/Frontend/src/components/StandardsForm/standards.js",[],"/e/Projects/Sigo/Frontend/src/services/CompliancesService.js",[],"/e/Projects/Sigo/Frontend/src/components/CardListingScrow/index.jsx",["182"],"import React, { useState } from 'react'\nimport {\n  Paper,\n  Table,\n  Button,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  makeStyles\n} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 200\n  }\n})\n\nexport default function StickyHeadTable({title, rows, columns, ...props}) {\n  const classes = useStyles()\n  const forceUpdate = useForceUpdate()\n  const [value, setValue] = useState(0)\n  function useForceUpdate() {\n    return () => setValue(value => value + 1)\n  }\n\n  let status = []\n  rows.forEach((element, index) => {\n    status[index] = element.code\n  })\n\n  const [checked, setChecked] = useState(status)\n  const changeState = (event, index) => {\n    checked[index] = !checked[index]\n    props.options(rows[index])\n    setChecked(checked)\n    forceUpdate()\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, index) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                  {columns.map((column, index_) => {\n                    const value = row[column.id]\n                    if (column.id === 'check') {\n                      return (\n                        <TableCell key={index_} align={column.align}>\n                          <Button\n                            onClick={(event) => changeState(event, index)}\n                            color={(checked[index]) ? \"primary\" : \"secondary\"}\n                            variant=\"contained\"\n                            size=\"small\"\n                          >\n                            {(checked[index]) ? \"Adicionar\" : \"Remover\"}\n                          </Button>\n                        </TableCell>\n                      )\n                    }\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    )\n                  })}\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  )\n}",{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":86,"column":6,"nodeType":"189","endLine":86,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":18,"column":8,"nodeType":"193","messageId":"194","endLine":18,"endColumn":22},{"ruleId":"191","severity":1,"message":"195","line":22,"column":9,"nodeType":"193","messageId":"194","endLine":22,"endColumn":15},{"ruleId":"191","severity":1,"message":"196","line":47,"column":10,"nodeType":"193","messageId":"194","endLine":47,"endColumn":15},{"ruleId":"187","severity":1,"message":"188","line":257,"column":6,"nodeType":"189","endLine":257,"endColumn":8,"suggestions":"197"},{"ruleId":"183","replacedBy":"198"},{"ruleId":"185","replacedBy":"199"},{"ruleId":"191","severity":1,"message":"200","line":12,"column":28,"nodeType":"193","messageId":"194","endLine":12,"endColumn":44},{"ruleId":"191","severity":1,"message":"201","line":28,"column":25,"nodeType":"193","messageId":"194","endLine":28,"endColumn":41},{"ruleId":"191","severity":1,"message":"196","line":26,"column":10,"nodeType":"193","messageId":"194","endLine":26,"endColumn":15},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loader'. Either include it or remove the dependency array.","ArrayExpression",["204"],"no-unused-vars","'ModulesService' is defined but never used.","Identifier","unusedVar","'loader' is assigned a value but never used.","'value' is assigned a value but never used.",["205"],["202"],["203"],"'getStandardsRows' is defined but never used.","'setStandardsRows' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"206","fix":"208"},"Update the dependencies array to be: [loader]",{"range":"209","text":"210"},{"range":"211","text":"210"},[2425,2427],"[loader]",[7090,7092]]